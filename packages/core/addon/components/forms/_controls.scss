@import '../../_private/common/mixins';
@import '../../_private/common/variables';
@import '../button/common';

$control-background-color: $button-background-color !default;
$control-background-color-hover: $button-background-color-hover !default;
$control-background-color-active: $button-background-color-active !default;
$dark-control-background-color: $dark-button-background-color !default;
$dark-control-background-color-hover: $dark-button-background-color-hover !default;
$dark-control-background-color-active: $dark-button-background-color-active !default;

$control-checked-background-color: nth(
  map-get($button-intents, 'primary'),
  1
) !default;
$control-checked-background-color-hover: nth(
  map-get($button-intents, 'primary'),
  2
) !default;
$control-checked-background-color-active: nth(
  map-get($button-intents, 'primary'),
  3
) !default;

$control-indicator-size: $pt-icon-size-standard !default;
$control-indicator-size-large: $pt-icon-size-large !default;
$control-indicator-spacing: $pt-grid-size !default;

@mixin control-checked-colors($selector: ':checked') {
  input#{$selector} ~ .#{$ns}-control-indicator {
    box-shadow: $button-intent-box-shadow;
    background-color: $control-checked-background-color;
    background-image: $button-intent-gradient;
    color: $white;
  }

  &:hover input#{$selector} ~ .#{$ns}-control-indicator {
    box-shadow: $button-intent-box-shadow;
    background-color: $control-checked-background-color-hover;
  }

  input:not(:disabled):active#{$selector} ~ .#{$ns}-control-indicator {
    box-shadow: $button-intent-box-shadow-active;
    background: $control-checked-background-color-active;
  }

  input:disabled#{$selector} ~ .#{$ns}-control-indicator {
    box-shadow: none;
    background: rgba($control-checked-background-color, 0.5);
  }

  .#{$ns}-dark & {
    input#{$selector} ~ .#{$ns}-control-indicator {
      box-shadow: $dark-button-intent-box-shadow;
    }

    &:hover input#{$selector} ~ .#{$ns}-control-indicator {
      box-shadow: $dark-button-intent-box-shadow;
      background-color: $control-checked-background-color-hover;
    }

    input:not(:disabled):active#{$selector} ~ .#{$ns}-control-indicator {
      box-shadow: $dark-button-intent-box-shadow-active;
      background-color: $control-checked-background-color-active;
    }

    input:disabled#{$selector} ~ .#{$ns}-control-indicator {
      box-shadow: none;
      background: rgba($control-checked-background-color-active, 0.5);
    }
  }
}

@mixin indicator-position($size) {
  $padding: $size + $control-indicator-spacing;

  &:not(.#{$ns}-align-right) {
    padding-left: $padding;

    .#{$ns}-control-indicator {
      margin-left: -$padding;
    }
  }

  &.#{$ns}-align-right {
    padding-right: $padding;

    .#{$ns}-control-indicator {
      margin-right: -$padding;
    }
  }
}

.#{$ns}-control {
  @include control-checked-colors();
  @include indicator-position($control-indicator-size);

  display: block;
  position: relative;
  margin-bottom: $pt-grid-size;
  cursor: pointer;
  text-transform: none;

  &.#{$ns}-disabled {
    cursor: not-allowed;
    color: $pt-text-color-disabled;
  }

  &.#{$ns}-inline {
    display: inline-block;
    margin-right: $pt-grid-size * 2;
  }

  input {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    z-index: -1; // don't let it intercept clicks
  }

  .#{$ns}-control-indicator {
    display: inline-block;
    position: relative;
    margin-top: -3px;
    margin-right: $control-indicator-spacing;
    border: none;
    box-shadow: $button-box-shadow;
    background-clip: padding-box;
    background-color: $control-background-color;
    background-image: $button-gradient;
    cursor: pointer;
    width: 1em;
    height: 1em;
    vertical-align: middle;
    // font-size is used to size indicator for all control types,
    // to reduce property changes needed across types and sizes (large).
    font-size: $control-indicator-size;
    user-select: none;

    &::before {
      display: block;
      width: 1em;
      height: 1em;
      content: '';
    }
  }

  &:hover .#{$ns}-control-indicator {
    background-color: $control-background-color-hover;
  }

  input:not(:disabled):active ~ .#{$ns}-control-indicator {
    box-shadow: $button-box-shadow-active;
    background: $control-background-color-active;
  }

  input:disabled ~ .#{$ns}-control-indicator {
    box-shadow: none;
    background: $button-background-color-disabled;
    cursor: not-allowed;
  }

  input:focus ~ .#{$ns}-control-indicator {
    @include focus-outline();
  }

  // right-aligned indicator is glued to the right side of the container
  &.#{$ns}-align-right .#{$ns}-control-indicator {
    float: right;
    margin-top: 1px;
    margin-left: $control-indicator-spacing;
  }

  &.#{$ns}-large {
    @include indicator-position($control-indicator-size-large);
    // larger text
    font-size: $pt-font-size-large;

    .#{$ns}-control-indicator {
      // em-based sizing
      font-size: $control-indicator-size-large;
    }

    &.#{$ns}-align-right .#{$ns}-control-indicator {
      margin-top: 0;
    }
  }

  /*
  Checkbox

  Markup:
  <label class='#{$ns}-control #{$ns}-checkbox {{.modifier}}'>
    <input type='checkbox' {{:modifier}} />
    <span class='#{$ns}-control-indicator'></span>
    Checkbox
  </label>

  :checked  - Checked
  :disabled - Disabled. Also add <code>.#{$ns}-disabled</code> to <code>.#{$ns}-control</code> to change text color (not shown below).
  :indeterminate - Indeterminate. Note that this style can only be achieved via JavaScript
                   <code>input.indeterminate = true</code>.
  .#{$ns}-align-right - Right-aligned indicator
  .#{$ns}-large - Large

  Styleguide checkbox
  */

  &.#{$ns}-checkbox {
    @mixin indicator-inline-icon($icon) {
      &::before {
        // embed SVG icon image as backgroud-image above gradient.
        // the SVG image content is inlined into the CSS, so use this sparingly.
        background-image: svg-icon(
          '16px/#{$icon}.svg',
          (
            path: (
              fill: $white
            )
          )
        );
      }
    }

    // make :indeterminate look like :checked _for Checkbox only_
    @include control-checked-colors(':indeterminate');

    .#{$ns}-control-indicator {
      border-radius: $pt-border-radius;
    }

    input:checked ~ .#{$ns}-control-indicator {
      // @include indicator-inline-icon('small-tick');
      &::before {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 1.003 0 0 0-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0 0 12 5z' fill='white'/%3e%3c/svg%3e");
      }
    }

    input:indeterminate ~ .#{$ns}-control-indicator {
      &::before {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1z' fill='white'/%3e%3c/svg%3e");
      }
    }
  }

  /*
  Radio

  Markup:
  <label class="#{$ns}-control #{$ns}-radio {{.modifier}}">
    <input type="radio" name="docs-radio-regular" {{:modifier}} />
    <span class="#{$ns}-control-indicator"></span>
    Radio
  </label>

  :checked  - Selected
  :disabled - Disabled. Also add <code>.#{$ns}-disabled</code> to <code>.#{$ns}-control</code> to change text color (not shown below).
  .#{$ns}-align-right - Right-aligned indicator
  .#{$ns}-large - Large

  Styleguide radio
  */

  &.#{$ns}-radio {
    .#{$ns}-control-indicator {
      border-radius: 50%;
    }

    input:checked ~ .#{$ns}-control-indicator::before {
      background-image: radial-gradient($white, $white 28%, transparent 32%);
    }

    input:checked:disabled ~ .#{$ns}-control-indicator::before {
      opacity: 0.5;
    }

    input:focus ~ .#{$ns}-control-indicator {
      -moz-outline-radius: $control-indicator-size;
    }
  }
}
